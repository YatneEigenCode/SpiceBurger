imgPost$= (function(){
  var $p={ms:2000, cur:null, proto:"imgpost://",
    stop:"#stopimgpost"}
  return function(url){ var isStop;
    for (var i=0,z=k=-1, at=document.images; i<at.length; i++)
      if (at[i].src.indexOf($p.stop)>0) isStop=true;
      else if (at[i].src.indexOf($p.proto)==0) $p.cur=at[i];
    if ($p.cur) {
      //setup iframe
      //send messages to iframe to build form and submit
    }
    soloTimeout( imgPost$, $p.ms );
  }
})();
//imgPost$();
messagePost= function(){
  //listen inside iframe for messages from parent frame
  //set up form and submit using post method
  //parent 
}
//-----
soloTimeout= (function(){
  var mfr$= function(){         var $p={ai:[]}
    return function(f,ms){
      if (!f) return mfr$();
      while ($p.ai.length>0) clearTimeout( $p.ai.pop() );
      $p.ai.push( setTimeout( f, ms ) );    
    }
  }; return mfr$();
})();
//soloTimeout(f,ms)  or  (st=soloTimeout())(f,ms)
fwRug= {
  soloTimeout: soloTimeout
  ,dkw:{ a:'appendChild',c:'createElement',D:document }
  ,toiu: function(s){return (typeof(window[s])=="undefined")}
  ,addEl: function(tag,par){ var k=this.dkw; 
    return this._=((par)?par:k.D.body)[k.a](k.D[k.c](tag)) }
  ,cgi: function(k,def,qy){
    var at=(qy+"").split(new RegExp("[\&\?]"+k+"="));
    return (at.length==1)?def:at[1].split("&")[0];
  }
}
flopi.soloTimeout()( function(){console.log(521)}, 3000 );
//-----
flopi= (function(){
  return Object.assign( {
    c: new Sto().lo
    ,z: {data:{},getItem:function(n){return this.data[n]},
        setItem:function(n,v){this.data[n]=v}}
    ,lm: new LinkMaker()
    ,wc: function(){ this.lm.wrapCloser(this._); }
    ,ceDiv: function(s){ this.addEl('div').innerHTML=s; this.wc(); }
  }, fwRug );
})();
flopi.ceDiv('test flopi 3');

//peer network drive- only name/timestamp are stored online

objasgn=function(o,csv,etc){
  for(var i=0,at=csv.split(","); i<at.length; i++)
    if (i+2<arguments.length) o[at[i]]=arguments[i+2];
}
//objasgn(div.style,s3,90,80,"yellow");
//evaljs-ok
