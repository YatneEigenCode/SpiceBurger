FuseInput=function(){
//6-30-2021 jkc v0.431 Added FillBee, popf1, removed FuiTcq and FuiCq ts2989
//todo: /all, /last;
  var kw=["ok","infuse","idle","#CCDDDD"];
  this.start=function(at){
    var e1= this.findInfuse("textarea");
    if (!e1) e1= this.findInfuse("input");
    if (!e1) return kw[2];
    this.infuse(e1,at[1]);
    return kw[0];
  }
  this.findInfuse= function(tag){
    var col=document.getElementsByTagName(tag);
    for (var i=0; i<col.length; i++)
      if (col[i].getAttribute(kw[1])) return col[i];
  }
  this.fcnMkStatus= function(el){
    var tu= new AppTool();
    if (!el.els) el.els= tu.addEl("div",el.parentNode);
    if (!el.ela) el.ela= tu.addEl("a",el.parentNode);
  }
  this.infuse= function(el, sfn, fcn){
    var tu= new AppTool();
    el.style.backgroundColor= kw[3];
    tu.addEl("input",el.parentNode).type= "button";
    tu._.value= sfn;
    tu._.onclick= (fcn)? fcn : function(){window[sfn](el)}
    if (fcn) tu._.fuiEl= el;
    el.removeAttribute(kw[1]);
    el.mkStatus= this.fcnMkStatus;
  }
}
FuiLab= function(){
//example of how to use FuseInput pgmxly from ce mod
  var el, fui= new FuseInput();
  this.kw= ["no element ready","Flab"];
  this.start= function(at){
    el= fui.findInfuse( (at.length>1)?at[1]:"input");
    if (!el) return alert(this.kw[0]);
    fui.infuse(el,this.kw[1],this.clickFcn,1);
  }
  this.clickFcn= function(){
    var tu= new AppTool();
    if (!this.ela) this.ela= tu.addEl("a",el.parentNode);
    this.ela.href= this.ela.innerHTML=
      "#://cmd/"+el.value.split(" ").join("%20");
  }
}
FuiLabU= function(){
  new AppTool().inherit( this, FuiLab );
  this.kw[1]= "Unescape";
  this.clickFcn= function(){ this.fuiEl.value= unescape(this.fuiEl.value); }
}
FuiLabE= function(){
  new AppTool().inherit( this, FuiLab );
  this.kw[1]= "Escape";
  this.clickFcn= function(){ this.fuiEl.value= escape(this.fuiEl.value); }
}
Bump= function(){
  new AppTool().inherit( this, FuiLab );
  var lu, kw=["bumpenv.csv","bumpout.csv"];
  this.kw[1]= "Bump";
  var cfg={lufilename:"x.csv",lukeycnum:0,luvalcnum:1,datvalcnum:0};
  this.clickFcn= function(){
    if (isNaN(dvcn)) dvcn= 0;
    cfg= csvDict(kw[0], cfg);
    lu= csvDict( cfg["lufilename"], {}, cfg.lukeycnum, cfg.luvalcnum );
    var dvcn = parseInt( cfg.datvalcnum );
    var wk= new StoTab();
    wk.fn= kw[1];
    wk.getAssetQ( this.fuiEl.value );
    for (var ap, i=1; i<wk.asset.length; i++) {
      ap= wk.asset[i];
      ap.push( lu[ ap[dvcn] ] );
    }
    wk.saveAsset();
  }
  var csvDict= function( fn, res, kcnp, vcnp ){
    var kcn= (kcnp)? parseInt(kcnp) : 0;
    var vcn= (vcnp)? parseInt(vcnp) : 1;
    res={bb:"hi"}, tab= new StoTab();
    tab.getAsset(fn);
    for (var i=0; i<tab.asset.length; i++)
      res[tab.assetVal(i,kcn)]= tab.assetVal(i,vcn);
    return res;
  }
}
FuiLabCopy=function(){
  new AppTool().inherit( this, FuiLab );
  this.kw[1]= "Copy Src/Dest";
  var lo= new Sto().lo;
  var mkStatus= function(el){
    var tu= new AppTool();
    if (!el.els) el.els= tu.addEl("div",el.parentNode);
    if (!el.ela) el.ela= tu.addEl("a",el.parentNode);
  }
  this.clickFcn= function(){ 
    var fel=this.fuiEl; ap= (this.fuiEl.value+"/").split("/");
    lo.setItem(ap[1], lo.getItem(ap[0]));
    mkStatus(this.fuiEl);
    fel.ela.href= fel.ela.innerHTML="#://cmd/edit%20"+ap[1];
    fel.els.innerHTML= "copied to "+ap[1];
  }
}
FuiLabMux=function(){
  new AppTool().inherit( this, FuiLab );
  this.kw[1]= "Mux";
  var lo= new Sto().lo;
  this.clickFcn= function(){ 
    var at, kw, res, fel=this.fuiEl, sep="-";
    kw=[unescape("%0a"),"{mux}","muxout.csv","#://cmd/tab%20"]; 
    if (fel.value.charAt(0)==fel.value.charAt(fel.value.length-1))
      sep= fel.value.charAt(0);
    at= (fel.value+sep).split(sep);
    if (at[1]=="") {kw[1]=at[2];at[0]="B";at[2]="";} else at.unshift("A");
    lo.setItem(kw[2], at.join(kw[0]+kw[1]) );
    fel.mkStatus(fel);
    fel.ela.href= fel.ela.innerHTML=kw[3]+kw[2];
  }
}
FuiSmartCq=function (){
  new AppTool().inherit( this, FuiLab );
  this.kw[1]= "smrTabCQ";
  var res, cq8="http://cq.ok88.com/tabulofl.htm?title="+this.kw[1];
  this.clickFcn= function(){ 
   const tab=new StoTab(), fel=this.fuiEl;
   var kw=["tmp/fuicq.csv","#://cmd/tab%20"];
   if (fel.value.indexOf("&row1=")>0){
    tab.asset=[]; tab.fn=kw[0]; res=kw[1]+kw[0];
    for (var t,isX,i=0; !isX && i<99; i++)
      if (!(t=tab.cgi("row"+i,"",fel.value))) isX=1
      else tab.asset.push(unescape(t).split("^^"))
    if (--i<1) tab.asset=["AB".split("")];
    tab.saveAsset();
   } else {
    tab.getAsset(fel.value);
    for (var i=0,res=cq8; i<tab.asset.length; i++){
      res+= "&row"+i+"="
      for (var j=0; j<tab.asset[i].length; j++)
        res+= ((j)?"^^":"")+ escape(tab.assetVal(i,j));
    }
   }//else
   fel.mkStatus(fel);
   fel.ela.href= fel.ela.innerHTML= res;
  }//fcn
}
//---
popf1=function(el){
  var tab, kw=["infuse"];
  if (!el.getAttribute(kw[0])) return;
  el.removeAttribute(kw[0]);
  new FuseInput().fcnMkStatus(el);
  el.onchange=function(){
    el.els.innerHTML= el.options[el.selectedIndex].text};
  (tab= new StoTab()).getAsset("docno.csv");
  for (var i=0; i<tab.asset.length; i++)
    el.options[i]= new Option(tab.assetVal(i,0));
}
TabFillBee= function(){
  const kw=["cfg/tabfillbee","stopped","data:"],lo=new Sto().lo;
  this.start=function(at){
    if (at.length==1) {lo.setItem(kw[0],""); return kw[1]}
    lo.setItem(kw[0], at[1]);
    setTimeout( fcnwkr_tabfillbee, 2000 );
  }
  var fcnwkr_tabfillbee= function(){
    console.log( "fcnwkr_tabfillbee active*" )
    if (!lo.getItem(kw[0])) return;
    for (var i=0,at=document.forms; i<at.length; i++)
      if (!at[i].isDone_tabfillbee)
        fcnsho_tabfillbee(at[i], i=at.length)
    setTimeout( fcnwkr_tabfillbee, 1000 );
  }
  var fcnsho_tabfillbee= function(fm){
    fm.isDone_tabfillbee= 1;
    var tab= new StoTab(), k=fm.elements.length;
    tab.addEl("input",fm.elements[k-1].parentNode);
    tab._.type="button";
    tab._.value= lo.getItem(kw[0]);
    tab._.onclick= fcnact_tabfillbee;
    (tab._.dataObj= tab).getAsset(tab._.value);
  }
  var fcnact_tabfillbee= function(){
    var tab=this.dataObj;
    tab.addEl("select",this.parentNode);
    for (var i=0,at=tab.asset; i<at.length; i++)
      tab._.options[i]= new Option(tab.assetVal(i,0));
    tab._.onclick= fcnPik_tabfillbee;
    tab._.onmousedown= fcnDwn_tabfillbee;
    this.parentNode.removeChild(this);
  }
  var fcnDwn_tabfillbee= function(){
    this.downIndex= this.selectedIndex;
  }
  var fcnPik_tabfillbee= function(){
    var fm= this.form, k=this.selectedIndex;
    if (this.downIndex==k) return;
    for (var i=0,at=this.form.elements; i<at.length; i++)
      if (!at[i].value) return at[i].value= this.options[k].text;
  }
}
