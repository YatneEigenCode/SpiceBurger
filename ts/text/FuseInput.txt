FuseInput=function(){
//5-26-2021 jkc v0.413 fcnMkStatus, FuiLabCopy ts2989
//todo: /all, /last;
  var kw=["ok","infuse","idle","#CCDDDD"];
  this.start=function(at){
    var e1= this.findInfuse("textarea");
    if (!e1) e1= this.findInfuse("input");
    if (!e1) return kw[2];
    this.infuse(e1,at[1]);
    return kw[0];
  }
  this.findInfuse= function(tag){
    var col=document.getElementsByTagName(tag);
    for (var i=0; i<col.length; i++)
      if (col[i].getAttribute(kw[1])) return col[i];
  }
  this.fcnMkStatus= function(el){
    var tu= new AppTool();
    if (!el.els) el.els= tu.addEl("div",el.parentNode);
    if (!el.ela) el.ela= tu.addEl("a",el.parentNode);
  }
  this.infuse= function(el, sfn, fcn){
    var tu= new AppTool();
    el.style.backgroundColor= kw[3];
    tu.addEl("input",el.parentNode).type= "button";
    tu._.value= sfn;
    tu._.onclick= (fcn)? fcn : function(){window[sfn](el)}
    if (fcn) tu._.fuiEl= el;
    el.removeAttribute(kw[1]);
    el.mkStatus= this.fcnMkStatus;
  }
}
FuiLab= function(){
//example of how to use FuseInput pgmxly from ce mod
  var el, fui= new FuseInput();
  this.kw= ["no element ready","Flab"];
  this.start= function(at){
    el= fui.findInfuse( (at.length>1)?at[1]:"input");
    if (!el) return alert(this.kw[0]);
    fui.infuse(el,this.kw[1],this.clickFcn,1);
  }
  this.clickFcn= function(){
    var tu= new AppTool();
    if (!this.ela) this.ela= tu.addEl("a",el.parentNode);
    this.ela.href= this.ela.innerHTML=
      "#://cmd/"+el.value.split(" ").join("%20");
  }
}
FuiLabU= function(){
  new AppTool().inherit( this, FuiLab );
  this.kw[1]= "Unescape";
  this.clickFcn= function(){ this.fuiEl.value= unescape(this.fuiEl.value); }
}
FuiLabE= function(){
  new AppTool().inherit( this, FuiLab );
  this.kw[1]= "Escape";
  this.clickFcn= function(){ this.fuiEl.value= escape(this.fuiEl.value); }
}
Bump= function(){
  new AppTool().inherit( this, FuiLab );
  var lu, kw=["bumpenv.csv","bumpout.csv"];
  this.kw[1]= "Bump";
  var cfg={lufilename:"x.csv",lukeycnum:0,luvalcnum:1,datvalcnum:0};
  this.clickFcn= function(){
    if (isNaN(dvcn)) dvcn= 0;
    cfg= csvDict(kw[0], cfg);
    lu= csvDict( cfg["lufilename"], {}, cfg.lukeycnum, cfg.luvalcnum );
    var dvcn = parseInt( cfg.datvalcnum );
    var wk= new StoTab();
    wk.fn= kw[1];
    wk.getAssetQ( this.fuiEl.value );
    for (var ap, i=1; i<wk.asset.length; i++) {
      ap= wk.asset[i];
      ap.push( lu[ ap[dvcn] ] );
    }
    wk.saveAsset();
  }
  var csvDict= function( fn, res, kcnp, vcnp ){
    var kcn= (kcnp)? parseInt(kcnp) : 0;
    var vcn= (vcnp)? parseInt(vcnp) : 1;
    res={bb:"hi"}, tab= new StoTab();
    tab.getAsset(fn);
    for (var i=0; i<tab.asset.length; i++)
      res[tab.assetVal(i,kcn)]= tab.assetVal(i,vcn);
    return res;
  }
}
FuiLabCopy=function(){
  new AppTool().inherit( this, FuiLab );
  this.kw[1]= "Copy Src/Dest";
  var lo= new Sto().lo;
  var mkStatus= function(el){
    var tu= new AppTool();
    if (!el.els) el.els= tu.addEl("div",el.parentNode);
    if (!el.ela) el.ela= tu.addEl("a",el.parentNode);
  }
  this.clickFcn= function(){ 
    var fel=this.fuiEl; ap= (this.fuiEl.value+"/").split("/");
    lo.setItem(ap[1], lo.getItem(ap[0]));
    mkStatus(this.fuiEl);
    fel.ela.href= fel.ela.innerHTML="#://cmd/edit%20"+ap[1];
    fel.els.innerHTML= "copied to "+ap[1];
  }
}
