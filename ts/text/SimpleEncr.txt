//4-29-2019 jchoy v1.121 prepInput, decryptCheck
SimpleEncr=function (){
  var $t= this;
  this.start=function(at){
    if (at.length<4) return "xci [/e|/d] key val";
    return this.encrypt( at[2], at.slice(3).join(" "), at[1]=="/d" );
  }
  this.encrypt= function( key, data, isDecrypt ){
    return (isDecrypt)? xor_filter$( key, atob(data) )
      : btoa( xor_filter$( key, data ) )
  }
  this.decryptCheck= function(k,v){
    var t,n=k.length;
    if(n==0)return"";
    t=this.encrypt(k,v,1);
    return (t.substr(0,n)==t.substr(-n,n))? t : "";
  }
  this.prepInput= function(inp, asset, callback){
    var encr= new SimpleEncr();
    inp.onkeyup= function(){
      var t= encr.decryptCheck(this.value, asset);
      if (t) callback(t);
    }
    return inp;
  }
  var xor_filter$= function(key, sdata) {
    return sdata.split("").map( function(c, i) {
      var kci= key.charCodeAt( i % key.length );
      return String.fromCharCode(c.charCodeAt(0) ^ kci);
    }).join("");
  }
  this._factory= function(){ return this.__mfr(0) }
  this._extender= function(){ return this.__mfr(1) }
  this.__mfr= function(c){
    if (c==1) return function(cow){ cow.encrypt=$t.encrypt }
    return function(){ return new SimpleEncr() }
  }
}
//simpleEncrMfr= new SimpleEncr()._factory();  //use instead of new
extendSimpleEncr= new SimpleEncr()._extender();
//js usage: if (typeof(extendSimpleEncr)!="undefined") extendSimpleCncr(this);
//console.log(simpleEncrMfr().encrypt('hop','this is a beast'))
//console.log(simpleEncrMfr().encrypt('hop','HAcZG08ZG08RSA0VCRwE',1))
