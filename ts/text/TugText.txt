//3-16-2018 jchoy TugText v0.191 RsuPub

TugTabText= function(fn,cmd){ this.start= function(){
    var st=new Sto(), cr= unescape("%0d%0a");
    if (st.isOk) st.lo.setItem( fn, [].slice.call(arguments,0).join(cr) );
    if (cmd) location.hash= "#://cmd/"+cmd+"%20"+fn;
  }}
TugText= function(fn){ new AppTool().inherit( this, TugTabText, fn, "edit" ); }
TugTab= function(fn){ new AppTool().inherit( this, TugTabText, fn, "tab" ); }

new TugTabText("tugtext").start("Welcome to TugText"
  ,"This can be used to publish info"
  ,"Info is packaged into a javascript class"
  ,"Subscribers use loadjs [url]"
  ,"Use tab tugtab to see list"
  ,""
  ,"TODO: a publisher class"
  ,"  list published files like bbs"
  ,""); 
/*
new TugTab("tugtab.csv").start( "K,V"
  ,"Welcome Mesage,#://cmd/edit%20tugtext"
  ,"this list,#://cmd/tab%20tugtab.csv"
  ,"2580,#://cmd/tc%20loadjs%20{dm}{pa}2580"
  ,"2581,#://cmd/tc%20loadjs%20{dm}{pa}2581"
  ,"2582,#://cmd/tc%20loadjs%20{dm}{pa}2582"
  ,"2583,#://cmd/tc%20loadjs%20{dm}{pa}2583"
  ,"2584,#://cmd/tc%20loadjs%20{dm}{pa}2584"
  ,"2585,#://cmd/tc%20loadjs%20{dm}{pa}2585"
)
*/
TugPubHub=function(){
 //publishes to same slot (in cfg)
 var lo= new Sto().lo;
 this.start=function(ap){
  if (ap.length<2) return "missing parameter #2";
  var nom= (ap.length>2)? ap[2] : "tugpubhub";
  var img=new Image();
  const src= lo.getItem(nom+'_cfg')+this.prepData(ap[1]);
  const res= (src.length>500)? 'max exceeded: ':'ok: '; 
  if (res=='ok: ') img.src= src;
  return [res+src.length, console.log(nom,src)][0];
 }
 this.prepData= function(fn){
  var q=unescape("%22"), cr=unescape("%0d%0a"), s0=lo.getItem(fn);
  if (s0.indexOf(cr)<0) cr=unescape("%0a");
  if (s0.indexOf(cr)<0) cr=unescape("%0d");
  var res= "new TugText("+q+fn+q+").start(" +q 
    +s0.split(cr).join(q+","+q) +q+");";
  return "&data="+encodeURIComponent(res);
 }
}
RsuPub=function(){
  new AppTool().inherit( this, TugPubHub );
  var lo= new Sto().lo;
  this.prepData= function(fn){
    var q=unescape("%22"), s0=lo.getItem(fn);
    var res= "new RsuParse().start(" +q +s0 +q+");";
    return "&data="+encodeURIComponent(res);
  }
}
RsuParse= function(){
  extendSimpleEncr( this );
  this.start= function(s){
    console.log('rsuparse start',s);
    var key= new AppTool().cgi("dk","$3cr3t",location);
    var sd= this.encrypt( key, s, 1 );
    console.log('rsuparse decrypt',key,sd);
    new CmdAutostart().parse( new CmdEngine().ce1.ce, sd );
  }
}
//-----
EncryptFile= function(){
  if (typeof(extendSimpleEncr)!="undefined") extendSimpleEncr(this);
  this.start= function(at){
    var asset, lo= new Sto().lo;
    if (!this.encrypt) return "no encryption installed";
    if (at.length<4) return "usage: encfile [/d|/e] key filename";
    if (!(asset=lo.getItem(at[3]))) return 'empty file';
    lo.setItem( at[3], this.encrypt( at[2], asset, at[1]=="/d" ) );
    return 'ok';
  }
}
